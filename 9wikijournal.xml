=9 Sequence Alignments=
==9.1 The sequence alignment problem==
<div class="time-estimate">
Time estimated: 0.5 h; taken 20 min; date started: 2019-11-13; date completed: 2019-11-13

[[User:Zhi Wei Zeng|Zhi Wei Zeng]] ([[User talk:Zhi Wei Zeng|talk]]) 16:52, 13 November 2019 (EST)
</div>

Much of bioinformatics is based on inference from similarities.

e.g. sequence similarity and inference of homology:
If sequences are significantly more similar than expected by chance, we typically hypothesize shared ancestry and conservation.

To measure sequence similarity, a pre-requisite is typically the '''alignment of sequences'''

;Alignment:
A notation for mapping between a pair of amino acids. The mapping should have meanings.

Typically, the alignment is such to maximize similarity between corresponding positions of amino acids.

'''Correct alignment have meaningful matching of amino acids, from which biological inferences can be made (e.g. descending from a common ancestor)'''

Complications:
Insertion and deletion, multiple alignment possibilities, unclear what is the "true" alignment

Strategies:
Minimize gap lengths, avoid aligning non-equivalent residues, maximize similarity of aligned sequences
:* All have caveats by themselves

'''Superposition of 3D structures''' can be used as the basis of "true alignment". However, it does not tell the evolutionary history of sequence change.

==9.2 Amino acid similarity==

<div class="time-estimate">
Time estimated: 1 h; taken 50 min; date started: 2019-11-13; date completed: 2019-11-13

[[User:Zhi Wei Zeng|Zhi Wei Zeng]] ([[User talk:Zhi Wei Zeng|talk]]) 16:52, 13 November 2019 (EST)
</div>

;Ways to model amino acid similarity:
:* identity-only, biophysical, required number of nucleotide changes, amino acids in similar context, other empirical...

;There are many ways to qualify similar amino acids, but quantifying similarity is not straightforward.
:* Function of an amino acid depends on context OR multiple functions are possible (Still, sequence alignment would typically be independent of context)
:* Can think of amino acid similarity system as a ''model'', abstracted into a '''scoring matrix'''
:* Each kind of similarity model would constitute an instance of a scoring matrix

Biophysical similarity turns out to be the least obvious, for that score will depend on different biophysical properties, and how to weight them is not clear.

Instead of first principle similarity, often empirical similarities are adopted.
:* i.e. empirical probability of substitution, based on evolution of point mutations
:* [https://en.wikipedia.org/wiki/BLOSUM BLOSUM vs PAM]? (PAM from global alignment of closely related proteins and extrapolate to greater evolutionary divergence. BLOSUM from local alignment of motifs and does not extrapolate)

BLOSUM also incorporates/considers more evolutionarily distant sequences?

;Activity - Inspect BLOSUM62 matrix (the typical go-to option)
:* Not all identical pairs are equal. e.g. Ser-Ser is lower than His-His, meaning that His is probably more likely conserved.
:* Pairs of similar biophysical properties tend to have higher scores (even positive). e.g. Lys-Leu is -2 while Ile-Leu is 2
:* (A key difference between PAM and BLOSUM) Arg-Trp is low/penalized in BLOSUM, while quite high in Arg-Trp in PAM, due to the ease of mutation.

 Biophysical properties of R and W are very different, 
 yet they seem like they would also often be having their own conserved functions related to their respective biophysical properties.
 I suspect the ease of mutation R-W makes the random R and W in closely related sequences easily interchanged.
 While in distantly related sequences, with conserved motifs considered, 
 R or W are unlikely to be randomly there and hence have respective conserved functions that would not be easily interchanged.

==9.3 Optimal sequence alignment==

<div class="time-estimate">
Time estimated: 1.5 h; taken 140 min; date started: 2019-11-14; date completed: 2019-11-17

[[User:Zhi Wei Zeng|Zhi Wei Zeng]] ([[User talk:Zhi Wei Zeng|talk]]) 00:56, 17 November 2019 (EST)
</div>

Inference of homology based on sequence similarity requires proper alignment (ideally the "correct" alignment)

'''The "correct/true" alignment cannot be obtained. The best thing we can do is obtain an optimal alignment'''

;The logic:
True alignment is not as "optimal" as the optimal (best possible) alignment. If even the optimal alignment cannot support homology, then the true alignment cannot either.
:* Does it mean that if optimal alignment supports homology, true alignment '''''might''''' support homology?

(By optimal we mean maximizing sequence similarity score under a particular evolutionary model)

'''For a given alignment, can quantify sequence similarity as the sum of pairwise matching scores'''
:* Pairscores of pairing possibilities can be tabulated as a matrix

;"Proving" homology: under a particular model of evolution, if it is sufficiently improbable that a given sequence similarity is due to random chance, then we assume homology of the most likely explanation.

;Generating the optimal sequence alignment:
:* Generate all possible alignments is an intractable problem. Complications due to existence of '''indels (sequence insertion/deletion)'''
:* Instead, we use an approach that make use of a path matrix. But there is an '''assumption'''
 Assumption/Premise: Alignment score = Sum of Pairscores - Penalty for Indels

This is the independence assumption. The alignment score for each aligned pair is independent of each other.

Any alignment can be represented as a path in the path matrix.

;The method - Needleman–Wunsch algorithm
:* Implements dynamic programming principles

;A note on modelling indels:
:* Indels are infrequent evolutionary events
:* Indels cannot be modelled with mechanistic considerations
:* Often, a simple penalty score function is used to model indels in sequence alignment: <math>w(l) = a + bl</math> (affine gap model)
:* Two parameters <math>a</math> and <math>b</math>: <math>a</math> imposes a "fixed cost" for having an indel. <math>b</math> parametrizes that longer indels are less frequent
:* Despite analysis showing that gap length distribution appears to be log-based, proposed log-labsed gap functions do not seem to improve alignment in practice [Cartwright, 2006]

Penalty scores from gap functions can be applied easily in Needleman–Wunsch path matrix method.

;Global vs local alignments:
:* Beware! A mathematically optimal alignment can be generated from just any two sequences. It's meaningless to generate alignment between two non-conserved or nonhomologous sequences
:* If the lengths are very different, or clearly sequences are multi-domain, or only domains have homology, local alignment is more favourable > Smith–Waterman algorithm
:* Local alignment used especially when insertion of domains would make gap penalty unreasonably large
:* Use global alignment for whole-length homologous sequences, bridging segments of high divergence?, discovering islands of similarity

;Final notes:
:* Impact of penalty function will depend on the scoring matrix as well.
:* Things to consider reporting: matrix, gap penalty functions, algorithm/methodology of alignment, percent identity
:* The 25% homology rule-of-thumb. But not a replacement for judicious analysis. Evidence for homology can stem from many other sources of similarities (e.g. structural, functional, sequence features etc.)

;Tools for sequence alignment:
:* EMBOSS tools: Needle (optimal global), Water (optimal local), stretcher, matcher, supermatcher

;Activity 1 - Explore EMBOSS tools and explore the impact of gap function parameters

1. Get sequences for MBP1 of Saccharomyces cerevisiae as well as of MYSPE from stored data

<source lang="R">
library(jsonlite)
source("../makeProteinDB.R")

#Get MBP1_SACCE sequence
sel <- myDB$protein$name == "MBP1_SACCE"
myDB$protein$sequence[sel]

#Get MBP1_ERECY sequence
sel <- myDB$protein$name == paste0("MBP1_", biCode(MYSPE))
myDB$protein$sequence[sel]
</source>

2. Go to EMBOSS tools https://www.ebi.ac.uk/Tools/emboss/

3. Launch "Water". Paste sequence for "MBP1_SACCE" and "MBP1_ERECY" as two sequences to be aligned. Start job with all other default settings.

4. Inspect and download as "emboss_water-I20191117-044521-0763-24891350-p1m.txt"

5. The N-terminus domain is very well aligned. The overall sequence identity is 47.4%. The N-terminus region is obviously well above 25% sequence identity.

6. Redo the same alignment. But under "More Options", set "Gap Open" to 25 and "Gap Extend" to 5.0

7. Inspect and download as "emboss_water-I20191117-045631-0075-96632173-p1m.txt"

;Conclusions:
:* Under the 25%-rule, the APSES domain of the two sequences considered are homologous
:* Increasing gap penalty here reduces both number and total amount of the gaps (12 vs 6; 12.5% vs 4.8%)
:* Somehow sequence identity did not seem to change after increasing the gap penalty (47.4% vs 47.3%). However, the alignment score decreased a lot (1883 vs 1563)

8. Do exactly the same, except now Launch "Needle" with all default settings.

9. Inspect and download result as "emboss_needle-I20191117-050738-0877-87249423-p2m.txt"

;Conclusions:
:* Global alignment captures the N-terminus excellent alignment as well. The sequence identity and alignment scores are not heavily compromised (46.8% and 1878)
:* The entire sequences were used here. There is an N-terminal indel.
:* Percent gaps: 13.2%

;Activity 2 - Explore Biostrings Pairwise sequence alignment tools in R with "BIN-ALI-Optimal_sequence_alignment.R"

Useful functions:
:* Biostrings::pairwiseAlignment(<pattern>, <subject>): <pattern>, <subject> are sequences to be aligned. Can be vectors of characters or XString objects. <subject> vector can only be length 1
:: Useful additional arguments: type, substitutionMatrix, gapOpening, gapExtension
:: Returns an incredibly complicated class of object "PairwiseAlignmentsSingleSubject"
:* Biostrings::writePairwiseAlignments(<alignment_object>): <alignment_object> is of class "PairwiseAlignmentsSingleSubject"
:* seqinr::s2c(<string>): string to a vector of characters

Useful syntax:
:* @: class attributes?

Line 228: <code>type="Overlap"</code>??

Have not done "BIN-FUNC-Annotation". Follow the instructions in 4.1.1

Line 337:
<div class="toccolours mw-collapsible mw-collapsed" style="width:90%; margin-left: 10px; padding-right: 15px">
<span style="color:red">'''''Error messages'''''</span>
<div class="mw-collapsible-content">
<code>
Error: lexical error: invalid char in json text.
                                      <MYSPE>-Annotations.json
                    (right here) ------^ 
</code>
</div>
</div>

<span style="color:green">'''Solution:'''</span> Change Line 8 in "makeProteinDB.R" from <code>myDB <- dbAddAnnotation(myDB, fromJSON("<MYSPE>-Annotations.json"))</code>

to <code>myDB <- dbAddAnnotation(myDB, fromJSON("../ERECY-Annotations.json"))</code>. My bad..

Finally, working as intended.

==9.4 BLAST (Basic Local Alignment Search Tool)==
===9.4.1 BLAST===
<div class="time-estimate">
Time estimated: 2 h; taken 105 min; date started: 2019-11-17; date completed: 2019-11-17

[[User:Zhi Wei Zeng|Zhi Wei Zeng]] ([[User talk:Zhi Wei Zeng|talk]]) 14:32, 17 November 2019 (EST)
</div>

;Motivation:
The sequence alignment computation learned so far does not scale very well (<math>O(n^2)</math>)

This makes searching on database scale or genome scale, which for some purposes is necessary, too slow (e.g. finding orthologs vis reciprocal best-match).

;BLAST (comes to the rescue..)
:* '''Fast''': use of index table of database "words". Divide sequence into "query words", map to similar "words", extend to high scoring segment pairs (HSPs), assemble HSPs into alignments
:* Heuristic: not optimal. Also not the most sensitive

;BLAST parameters:
:* algorithm
:* scoring parameters
:* filters and masking

;BLAST results:
:* A '''hit''' is an alignment with one or more HSPs found.
:* Outputs are ranked by scores (quality of alignment). Scores are calculated based on scoring matrix specified. Also sum of pairscores minus gap penalties.
:* Note that scores are in '''bits'''. A normalized measure by NCBI allowing comparison of scores among different choices of matrices.
:* Percent identity, percent similarity, gap fraction
:* E-value: significance of alignment

;E-value:
:* '''It is a significance measure of the alignment score'''
:* The E-value for a given alignment score is the expectation value for (the number of alignments with score equal or better occuring in a hypothetical database)
:: This hypothetical database is such that it does not contain a homologous sequence (therefore E-value depends on database size)
:* Sort of like a chance of false homology

 Caution: E-value is not a full replacement for judgement based on biological intuition. It's just one of the useful pieces of information.

 Always check the annotations (if available) and the actual alignment. Weigh in information not captured by E-value.

;Final notes:
:* Typical approaches when too many uninformative hits: restrict the database (e.g. refSeq or organism specific ones), search with substrings, E-value criterion (proceed this with caution)
:* Typical approaches when too few hits: search with domains (increase sensitivity), database restrictions, E-value bars, loosen scoring matrix, PSI-BLAST
:* Judiciously including extra information helps with search sensitivity

;Activity - Unravel the orthology between Mbp1_SACCE and Mbp1_ERECY via RBM

1. Go to https://blast.ncbi.nlm.nih.gov/Blast.cgi and "Protein BLAST"

2. Use "XP_003645298" as query sequence. Select database "refseq_protein". Restrict "Organism" to "Saccharomyces cerevisiae (taxid:4932)"

3. BLAST!

4. Top hit is NP_010227.1. Score is 703. E-value is 0.0

;Conclusion:
:* Orthology between Mbp1_SACCE and Mbp1_ERECY confirmed via RBM.

:* In the past, Boris encountered a perhaps rare cases where DNA-binding domain annotation is corrupted. Keep in mind this could actually happen?!

Issues pertaining to Mbp1 APSES domain annotations out there:
:* APSES annotation no longer exists in pFam. It has merged with KilA-N due to discovered homology. However, InterPro still has APSES.
:* Inconsistency between CDD and SMART annotations of "pFam 04383" domain (expected though..)
:* We will consider 4-102 of NP_010227 sequence as APSES domain. Apparently KilA-N annotation misses the almost conserved & structurally defined N-terminus of APSES in fungi..

5. Go back to Protein BLAST. Use the APSES of Mbp1_SACCE as sequence query (FASTA):

 >APSES_MBP1 Residues 4-102 of S. cerevisiae Mbp1
 QIYSARYSGVDVYEFIHSTGSIMKRKKDDWVNATHILKAANFAKAKRTRI
 LEKEVLKETHEKVQGGFGKYQGTWVPLNIAKQLAEKFSVYDQLKPLFDF

6. Select "refseq_protein" as the "Database". Use the taxid "931890" as "Organism".

7. BLAST!

8. The top hit is indeed XP_003645298.1. Great! Forward confirmed (E-value 2e-50, score 167, sequence identity 83.84%).

9. Cautioned that it's not ideal to use the sequence from BLAST alignment to do reverse search, as BLAST is not optimal alignment.

Shall use optimal alignment to determine best alignment and use that to define domain boundaries for ERECY.

10. Retrieve APSES of ERECY sequence definitions from optimal alignment obtained from #9.3 (11-109) and use this for reverse search (Procedures following "BIN-ALI-BLAST.R")

(Though it turns out that non-optimal alignment produced by BLAST is also 11-109. Secretly laughing in bioinformatics..)

Line 70:
<div class="toccolours mw-collapsible mw-collapsed" style="width:90%; margin-left: 10px; padding-right: 15px">
<span style="color:red">'''''Error message'''''</span>
<div class="mw-collapsible-content">
<code>
Error in requireNamespace(httr, quietly = TRUE) : object 'httr' not found
</code>
</div>
</div>

<span style="color:green">'''Solution:'''</span> Line 34 in "BLAST.R", httr should be a string "httr".

Line 91:
Top hit is "NP_010227.1", the Mbp1_SACCE. Confirmed RBM of APSES for Mbp1_ERECY!

===9.4.2 PSI-BLAST===

<div class="time-estimate">
Time estimated: 2 h; taken 3 h; date started: 2019-11-17; date completed: 2019-11-17

[[User:Zhi Wei Zeng|Zhi Wei Zeng]] ([[User talk:Zhi Wei Zeng|talk]]) 20:21, 17 November 2019 (EST)
</div>

;Motivation:
Search instead of individual sequences, do '''profile-based search'''. Reduce impact of neutral drifts.

;PSI-BLAST:
Focus on commonalities with specific tolerance of variation within a family of homologous sequences.
:* First, constructs MSA from generic protein BLAST hits. This creates a profile called '''Position-specific Scoring Matrix (PSSM)'''
:* PSSM is used as the query against the database. E-values of hits are evaluated and hits are included in the construction of the profile. Iterate these two steps a few times.
:* (Essentially, the first iteration/base case is normal BLAST)

;Behaviour of PSI-BLAST results:
:* Real homologs will tend to dramatically decrease in E-value over iterations. E-value of spurious homologs tends to stay the same or increase.
:* Can exclude suspicious hits from the profile based on E-value trend, in order to not "corrupt" the profile.

;Species selection:
Aim for "well-spaced" selection and a balance of restrictions.

;Dealing with issues of profile corruption:
:* Filtering regions with low-complexity (X the regions in the query that might lead to stat. signif. but biologically uninteresting ones)
:* Other approaches: stringent E-values, eliminate suspicious hits, always actually inspect the outputs and combine with biological intuition.

;DELTA-BLAST:
Seems like a variant of PSI-BLAST, except it builds profiles from CDD domains in the query

;COMPASS:
An improvement of PSI-BLAST? [Sadreyev & Grishin (2003)]

Why would optimal sequence alignment be less able to find alignment of internal repeats?

;Activity 1 - Use PSI-BLAST and find transcription factor orthologs and paralogs in ERECY containing APSES

 Choice of domain for this task: APSES from Mbp1_SACCE (specific and sensitive choice).
 Choice of species space for this task: sampled from as large range of the evolutionary tree as possible with genomes fully squenced.
 This is to build a reliable profile. But also not too many to practically check all the hits.

1. My choice of species formatted in NCBI Entrez query:

 "Aspergillus nidulans"[organism] OR
 "Bipolaris oryzae"[organism] OR
 "Coprinopsis cinerea"[organism] OR
 "Cryptococcus neoformans"[organism] OR
 "Neurospora crassa"[organism] OR
 "Puccinia Graminis"[organism] OR
 "Saccharomyces cerevisiae"[organism] OR
 "Schizosaccharomyces pombe"[organism] OR
 "Ustilago maydis"[organism] OR
 "Wallemia mellicola"[organism] OR
 "Eremothecium cymbalariae"[organism]

2. Go to Protein BLAST. Use the APSES of Mbp1_SACCE as sequence query (FASTA see 9.4.1). "Database" is "refseq_protein". 

<span style="color:red">'''I cannot find the "Entrez Query" field. Instead, I put all the above organisms in "Organisms". Like this:'''</span>

[[File:organism.jpg|500px]]

3. Select "PSI-BLAST" as the "Algorithm". Then BLAST!

4. Under "Sequences producing significant alignments", hits are divided into "better than threshold" and "worse than threshold". "Worse than threshold" were not by default selected for PSI-BLAST.

 The E-value threshold is 10, while PSI-BLAST threshold is 0.005. Maybe that's what it means?

5. Under "Filter Results", change "PSI-BLAST incl. threshold" from 0.005 to 0.001. Click "Filter". Also, unselect the hits with "Query Cover" less than 80% from "Select for PSI blast".

6. Run PSI-BLAST iteration 2.

7. Seeing the results, I feel like some of the added ones might have been the ones I just excluded, coming back with different coverage values.

[[File:bottom_iter2.jpg|500px]]

Get rid of all the new ones with query coverage below 80%. Additionally, one sequence that was not excluded ended up with query coverage below 80%. Eliminate that as well.

Two newly added ones have above 80% query coverage:

 hypothetical protein AN5405.2 [Aspergillus nidulans FGSC A4]
 XP_663009.1
 Score	Expect	Method	Identities	Positives	Gaps
 51.0 bits(121)	3e-08	Composition-based stats.	22/97(23%)	42/97(43%)	9/97(9%)
 Query  11   DVYEF------IHSTGSIMKRKKDDWVNATHILKAANFAKAKRTRILEKEV-LKETHEKV  63
             +V+++           ++M       V  TH+ K  +++K    ++L +   L++    +
 Sbjct  115  EVFQYTFQLPGEEKQWTVMWDYNIGLVRTTHLFKCNDYSKTTPAKMLNQNPGLRDICHSI  174
 Query  64   QGGFGKYQGTWVPLNIAKQLAEK--FSVYDQLKPLFD  98
              GG    QG W+P   AK +A    + +   L PLF 
 Sbjct  175  TGGALAAQGYWMPYEAAKAIAATFCWKIRFALTPLFG  211


 hypothetical protein CNH00150 [Cryptococcus neoformans var. neoformans JEC21]
 XP_024513299.1
 Score	Expect	Method	Identities	Positives	Gaps
 39.8 bits(92)	3e-04	Composition-based stats.	23/114(20%)	42/114(36%)	25/114(21%)
 Query  9     GVDVYEFIHST------GSIMKRKKDDWVNATHILKAANFAKAKRTRILE---KEVLKET  59
               + VY  +           +++R   D+VNA  +L A   + +K +  L+    +     
 Sbjct  1112  NIPVYAHLFEGRNGSGKQVLLRRLDTDFVNANALLHALGVSPSKHSEYLDHPISQARLAA  1171
 Query  60    HEKVQGGF--GKY----QGTWVPLNIAKQLAEKFS----------VYDQLKPLF  97
                 VQ      +Y     G WV L+ A++ A +            + + L  LF
 Sbjct  1172  RHIVQSSTSGMEYSNGVSGIWVHLSEAREFARRAKLAGGSLLASVLREDLFQLF  1225

My arbitrary qualitative judgement tells me I don't trust these two and would exclude them. The alignments are not good at all. The second one has a large amount of gaps.

8. Run PSI-Blast iteration 3.

9. No new sequences were added. What if I exclude the bottom sequences not used to build PSSM?

[[File:bottom_iter3.jpg|500px]]

10. Run PSI-Blast iteration 4.

11. I think my PSI-BLAST has converged. Go to "Taxonomy" > "Organism". Find "Eremothecium cymbalariae DBVPG#721".

;Conclusions:
:* Here are the homologs in ERECY based on my PSI-BLAST:

 Hypothetical protein Ecym_2783 [Eremothecium cymbalariae DBVPG#7215]	141	4e-40	XP_003645298
 hypothetical protein Ecym_7145 [Eremothecium cymbalariae DBVPG#7215]	134	2e-37	XP_003647811
 hypothetical protein Ecym_4584 [Eremothecium cymbalariae DBVPG#7215]	121	6e-33	XP_003646434
 Hypothetical protein Ecym_3312 [Eremothecium cymbalariae DBVPG#7215]	53.7	4e-09	XP_003645620

:* Just like Xbp1 in SACCE, hypothetical protein Ecym_3312 has low sequence coverage, but keeps coming back in iterations. Tempting to think this is a similar situation to Xbp1.

Hmm.. For my info:

 Score	Expect	Method	Identities	Positives	Gaps
 53.7 bits(128)	4e-09	Composition-based stats.	16/41(39%)	28/41(68%)	2/41(4%)
 Query  60   HEKVQGGFGKYQGTWVPLNIAKQLAEK--FSVYDQLKPLFD  98
             +++++GG+ K QGTW+PL I++QL  +  F +   L P+F 
 Sbjct  370  YKRIRGGYIKIQGTWLPLEISRQLCTRFCFPIRYLLVPIFG  410

I will keep it for now

;Activity 2 - Add discovered homolog sequences to my records

1. Use https://www.uniprot.org/uploadlists/ ID-mapping tool to get UniProtID for each entry.

 I just realized the top hit ECYM_2783 is just the hypothetical Mbp1_ERECY I've been working with the whole time..

 XP_003645298: G8JQ18
 XP_003647811: G8JVX9
 XP_003646434: G8JS95
 XP_003645620: G8JRN4

2. Add PSI-BLAST discovered proteins into a JSON file. Use a script I created in 3.8.3 to get a nice formatted sequence to store in JSON.

3. This results in the file "ERECY_APSES_PSI-BLAST.json". Add <code>myDB <- dbAddProtein(myDB, fromJSON("MYSPE_APSES_PSI-BLAST.json"))</code> to "makeProteinDB.R" and save.

4. Verify my storage with the following code:
<source lang="R">
source("../makeProteinDB.R") # My scripts are located differently due to my own version control

sel <- which(myDB$taxonomy$species == MYSPE)
(taxid <- myDB$taxonomy$ID[sel])
 
sel <- which(myDB$protein$taxonomyID == taxid)
myDB$protein$name[sel]      # Does this return all of the APSES domain protein
                            # names of MYSPE? If not, this needs to be fixed.
                            # Ask for advice.
 
nchar(myDB$protein$sequence[sel])
</source>

Success! Though entry "MBP1_ERECY" and "ECYM_2783" are duplicates. I am going to remove "ECYM_2783" from "ERECY_APSES_PSI-BLAST.json"

==9.5 Multiple Sequence Alignment (MSA)==

<div class="time-estimate">
Time estimated: 2.5 h; taken 4.5 h; date started: 2019-11-17; date completed: 2019-11-19

[[User:Zhi Wei Zeng|Zhi Wei Zeng]] ([[User talk:Zhi Wei Zeng|talk]]) 01:11, 19 November 2019 (EST)
</div>

;Important premise:
MSA is still an unsolved problem and an active research topic. Current specific technical knowledge can become outdated rapidly.

MSA can inform phylogenic relationships and conservation patterns. Useful for homology modelling, structural prediction, defining domain boundaries etc.

MSA is not constructed from pairwise alignments between sequences (e.g. conflicts).

Optimal pairwise alignment is also not necessarily best multiple alignment.

Optimal multiple alignment is not only intractable very quickly but also has questionable value (i.e. amino acid similarity in average case vs MSA concerned specific case)

;Objective functions for MSAs:
Depends on biological objectives. Often heuristic in nature.
:* Min number of indels & max sequence similarity > Exact algorithm (E). Search optimal path in n-dim path matrix.
:* Recapitulation of phylogeny > Progressive algorithm (Prog). Align most simiar first, guide tree, then merge. FND
:* Retention of conserved motifs > Consistency based algorithm (C). Use conserved regions to guide alignment. FND
:* Max similarity to a model > Probabilistic algorithm (Prob). Create a model and align sequences to it (recall PSI-BLAST). FND
:* "Learn" about important regions & extend alignment from important seed regions > Iterated (I). Iteratively improve alignment from draft.

;Examples of algorithms:

;Pure algorithms:
Clustal W, X:
:* Pure P. MSA.
:* Performance not great. Degredation of accuracy severe.

MUSCA, MEME
:* C. MSA.

HMMER:
:* Prob. MSA.

;Hybrid algorithms:
:* '''TCoffee''': C. & Prog. MSA. Reliable, robust, and fast.
:* '''MUSCLE''': Prog. & I. MSA. Available in R-package "msa" as well.

===9.5.1 The practice and best approaches to MSA===
;Choosing algorithms:
Depends on biological question... (e.g. Conservation pattern - easy. Domain boundaries - correct indel placements. Homol. Model. - correct pairwise template target alignment)
:* Use the best algorithms and compare results of multiple algorithms. > Benchmark sets are available out there for this (e.g. BAliBASE, SABmark, PREFAB)

Benchmark sets for testing algorithms differ in standard of truth, difficulty/quality of reference sequence sets, alignment scores..

:* Keep updated about recent algorithms via PubMed (thanks for the punchline!):

<code>
("multiple protein sequence alignment"[ti] OR "multiple sequence
alignment"[ti] OR "multiple alignment"[ti]) AND (server OR algorithm) AND
"last 2 years"[dp]
</code>

;Selecting sequences:
One of the most important considerations!
:* Sample sequences well distributed on the evolutionary tree for MSA to alleviate bias (fair distribution)
:* Include sequences with known structures if available
:* Selection of sequence aligns with research goal
:* '''Avoid non-homologous sequences''' and sequences evolved in different local structural environments (i.e. complications of voiding the point of similarity scores)
:* Align domains separately if domain annotations are available. Caution around "unalignable regions" from contaminating models or early stages.

;Performing the alignment:
:* Use several algorithms. This way can see which regions are consensual as well as regions sensitive to parameters of algorithms.

<span style="color:green">'''It's OK to manually edit alignments to improve it!'''</span>
:* Incorporate context and heuristics. Just document it well and it's fine. Common sense is important too.

;MSA data formats:
:* .mfa: multiFASTA.
:* .aln: CLUSTAL MSA format
:* .msa: MSF?

;Useful tools for viewing and editing:
:* JALVIEW
:* AliView

;Representing MSAs:
'''Sequence Logo''' seems the best.. Based off information theory.

;Quantitative analysis of MSAs:
Column scores.
:* Variation score: based on substitution matrix. Reflect the model manifested by the matrix (which may not be accurate for the specific instance of MSA at hand..)
:* Information score: based on information theory. Use frequency of amino acids at each position. Seems to perform the best. Require a reference distribution of frequency though..
:* Conservation score: based on explicit phylogenies?

===9.5.2 Performing MSA on Mbp1===
;Activity 1 - Perform MSA via EBI web tools on Mbp1 orthologs

1. Go to [https://www.ncbi.nlm.nih.gov/protein/ NCBI Protein]. Search with the following query:

 NP_010227 NP_593032 XP_660758 XP_007682304 XP_955821 XP_001837394
 XP_569090 XP_003327086 XP_011392621 XP_006957051 XP_003645298

2. Query returns a list of retrieved protein entries. Under "Summary" drop-down, choose "FASTA(text)". Content saved to "msa_Mbp1.mfa"

3. Go to EBI MSA tools page https://www.ebi.ac.uk/Tools/msa/ > "Launch T-coffee"

4. Paste the content from "msa_Mbp1.mfa" in the query field. Then, "Submit"

5. I guess there are roughly 3 well-aligned regions. (The C-terminal one is a bit of a stretch qualitatively).

6. Download alignment file as "msaT.aln"

;Activity 2 - Perform MSA in R (BIN-ALI-MSA.R)

<source lang="R">
install.packages("ggseqlogo")
</source>
<div class="toccolours mw-collapsible mw-collapsed" style="width:90%; margin-left: 10px; padding-right: 15px">
'''''Installation messages'''''
<div class="mw-collapsible-content">
<code>
Installing package into ‘C:/Users/Wilson/Documents/R/win-library/3.6’
(as ‘lib’ is unspecified)
also installing the dependencies ‘colorspace’, ‘plyr’, ‘labeling’, ‘munsell’, ‘gtable’, ‘lazyeval’, ‘reshape2’, ‘scales’, ‘viridisLite’, ‘ggplot2’

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/colorspace_1.4-1.zip'
Content type 'application/zip' length 2550209 bytes (2.4 MB)
downloaded 2.4 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/plyr_1.8.4.zip'
Content type 'application/zip' length 1302845 bytes (1.2 MB)
downloaded 1.2 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/labeling_0.3.zip'
Content type 'application/zip' length 62937 bytes (61 KB)
downloaded 61 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/munsell_0.5.0.zip'
Content type 'application/zip' length 245687 bytes (239 KB)
downloaded 239 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/gtable_0.3.0.zip'
Content type 'application/zip' length 434412 bytes (424 KB)
downloaded 424 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/lazyeval_0.2.2.zip'
Content type 'application/zip' length 173491 bytes (169 KB)
downloaded 169 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/reshape2_1.4.3.zip'
Content type 'application/zip' length 628245 bytes (613 KB)
downloaded 613 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/scales_1.0.0.zip'
Content type 'application/zip' length 1073764 bytes (1.0 MB)
downloaded 1.0 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/viridisLite_0.3.0.zip'
Content type 'application/zip' length 60758 bytes (59 KB)
downloaded 59 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/ggplot2_3.2.1.zip'
Content type 'application/zip' length 3976049 bytes (3.8 MB)
downloaded 3.8 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/ggseqlogo_0.1.zip'
Content type 'application/zip' length 782923 bytes (764 KB)
downloaded 764 KB

package ‘colorspace’ successfully unpacked and MD5 sums checked
package ‘plyr’ successfully unpacked and MD5 sums checked
package ‘labeling’ successfully unpacked and MD5 sums checked
package ‘munsell’ successfully unpacked and MD5 sums checked
package ‘gtable’ successfully unpacked and MD5 sums checked
package ‘lazyeval’ successfully unpacked and MD5 sums checked
package ‘reshape2’ successfully unpacked and MD5 sums checked
package ‘scales’ successfully unpacked and MD5 sums checked
package ‘viridisLite’ successfully unpacked and MD5 sums checked
package ‘ggplot2’ successfully unpacked and MD5 sums checked
package ‘ggseqlogo’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in C:\Users\Wilson\AppData\Local\Temp\Rtmp8G3olX\downloaded_packages
</code>
</div>
</div>


<source lang="R">
if (! requireNamespace("msa", quietly=TRUE)) {
  BiocManager::install("msa")
}
</source>
<div class="toccolours mw-collapsible mw-collapsed" style="width:90%; margin-left: 10px; padding-right: 15px">
'''''Installation and warning messages'''''
<div class="mw-collapsible-content">
<code>
Bioconductor version 3.9 (BiocManager 1.30.9), R 3.6.1 (2019-07-05)
Installing package(s) 'msa'

There is a binary version available but the source version is later:
binary source needs_compilation
msa 1.15.0 1.16.0              TRUE

Binaries will be installed
trying URL 'https://bioconductor.org/packages/3.9/bioc/bin/windows/contrib/3.6/msa_1.15.0.zip'
Content type 'application/zip' length 3210886 bytes (3.1 MB)
downloaded 3.1 MB

package ‘msa’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
C:\Users\Wilson\AppData\Local\Temp\Rtmp8G3olX\downloaded_packages
Installation path not writeable, unable to update packages: boot, foreign, KernSmooth, mgcv,
nlme, survival
Old packages: 'BiocManager', 'hexbin', 'msa', 'R.oo', 'R6', 'Rcpp', 'testthat'
Update all/some/none? [a/s/n]: 
a
also installing the dependencies ‘ps’, ‘processx’, ‘callr’, ‘desc’, ‘pkgbuild’, ‘rprojroot’, ‘rstudioapi’, ‘pkgload’


There is a binary version available but the source version is later:
binary source needs_compilation
msa 1.15.0 1.16.0              TRUE

Binaries will be installed
trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/ps_1.3.0.zip'
Content type 'application/zip' length 307255 bytes (300 KB)
downloaded 300 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/processx_3.4.1.zip'
Content type 'application/zip' length 409396 bytes (399 KB)
downloaded 399 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/callr_3.3.2.zip'
Content type 'application/zip' length 339461 bytes (331 KB)
downloaded 331 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/desc_1.2.0.zip'
Content type 'application/zip' length 287244 bytes (280 KB)
downloaded 280 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/pkgbuild_1.0.6.zip'
Content type 'application/zip' length 137113 bytes (133 KB)
downloaded 133 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/rprojroot_1.3-2.zip'
Content type 'application/zip' length 84899 bytes (82 KB)
downloaded 82 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/rstudioapi_0.10.zip'
Content type 'application/zip' length 240333 bytes (234 KB)
downloaded 234 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/pkgload_1.0.2.zip'
Content type 'application/zip' length 157366 bytes (153 KB)
downloaded 153 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/BiocManager_1.30.10.zip'
Content type 'application/zip' length 100427 bytes (98 KB)
downloaded 98 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/hexbin_1.28.0.zip'
Content type 'application/zip' length 992451 bytes (969 KB)
downloaded 969 KB

trying URL 'https://bioconductor.org/packages/3.9/bioc/bin/windows/contrib/3.6/msa_1.15.0.zip'
Content type 'application/zip' length 3210886 bytes (3.1 MB)
downloaded 3.1 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/R.oo_1.23.0.zip'
Content type 'application/zip' length 967752 bytes (945 KB)
downloaded 945 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/R6_2.4.1.zip'
Content type 'application/zip' length 59337 bytes (57 KB)
downloaded 57 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/Rcpp_1.0.3.zip'
Content type 'application/zip' length 2996604 bytes (2.9 MB)
downloaded 2.9 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/testthat_2.3.0.zip'
Content type 'application/zip' length 1810444 bytes (1.7 MB)
downloaded 1.7 MB

package ‘ps’ successfully unpacked and MD5 sums checked
package ‘processx’ successfully unpacked and MD5 sums checked
package ‘callr’ successfully unpacked and MD5 sums checked
package ‘desc’ successfully unpacked and MD5 sums checked
package ‘pkgbuild’ successfully unpacked and MD5 sums checked
package ‘rprojroot’ successfully unpacked and MD5 sums checked
package ‘rstudioapi’ successfully unpacked and MD5 sums checked
package ‘pkgload’ successfully unpacked and MD5 sums checked
package ‘BiocManager’ successfully unpacked and MD5 sums checked
package ‘hexbin’ successfully unpacked and MD5 sums checked
package ‘msa’ successfully unpacked and MD5 sums checked
package ‘R.oo’ successfully unpacked and MD5 sums checked
package ‘R6’ successfully unpacked and MD5 sums checked
package ‘Rcpp’ successfully unpacked and MD5 sums checked
Warning: cannot remove prior installation of package ‘Rcpp’
Warning: restored ‘Rcpp’
package ‘testthat’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in C:\Users\Wilson\AppData\Local\Temp\Rtmp8G3olX\downloaded_packages
Warning message:
In file.copy(savedcopy, lib, recursive = TRUE) :
problem copying C:\Users\Wilson\Documents\R\win-library\3.6\00LOCK\Rcpp\libs\x64\Rcpp.dll to C:\Users\Wilson\Documents\R\win-library\3.6\Rcpp\libs\x64\Rcpp.dll:
Permission denied
</code>
</div>
</div>

Useful functions:
:* msa::msaMuscle(<XStringSet>): <XStringSet> is a object returned by for example <code>Biostrings::AAStringSet</code>. Returns an object of class MsaXMultipleAlignment.
:* msa::print(): show MSA output from an object of class MsaXMultipleAlignment
:* msaConservationScore(): returns a vector of column scores. Takes an object of class MsaXMultipleAlignment as argument.
:: A scoring matrix object, obtained from <code>data()</code> can be used for the <code>substitutionMatrix</code> argument.
:* seqinr::read.alignment(): read from MSA object and returns a list.
:* rle(): run-length encoding?
:* writeALN(): from .utilities.R. Write from MSA object to stdout() in multiFASTA format (but the STDOUT will print "CLUSTAL W Format"..).
:* fetchMSAmotif(<ali>, <mot>): retrieve a subset from <ali>(MSA) that spans sequence in <mot>(string)
:* new(<class_string>): Generate a new object from <class_string> (might end up being incredibly useful!)
:* DECIPHER::AlignProfiles(): align two sets of aligned one or more sequences by generating profiles for both first. Then returns merged aligned both sequence sets
:* ggseqlogo::ggseqlogo(<data>): Plot sequence logo. <data> is a vector of characters that are sequences of the same width

Line 101:
File name is not "MBP1orthologuesTC.aln". It's "msaT.aln".

Line 170:
The code should say <code>data("BLOSUM62", package="Biostrings")</code>

Line 180-188:
Smoothing treatment for the plot.

'''Comparing MSA in R is really kind of a pain. msa is unable to import just any algorithms out there (e.g. T-coffee)..'''

'''Has to import alignment output files, and create an R-object of MSA type class (class "MsaAAMultipleAlignment") before msa functions can read them..'''

Line 476-477:
Profile-Profile alignments - Great for picking up relationships between distant sequence families? (but here only used to compare MSA methods??)

<source lang="R">
if (! requireNamespace("DECIPHER", quietly=TRUE)) {
  BiocManager::install("DECIPHER")
}
</source>
<div class="toccolours mw-collapsible mw-collapsed" style="width:90%; margin-left: 10px; padding-right: 15px">
'''''Installation  and warning messages'''''
<div class="mw-collapsible-content">
<code>
Bioconductor version 3.9 (BiocManager 1.30.10), R 3.6.1 (2019-07-05)
Installing package(s) 'DECIPHER'
trying URL 'https://bioconductor.org/packages/3.9/bioc/bin/windows/contrib/3.6/DECIPHER_2.12.0.zip'
Content type 'application/zip' length 11930416 bytes (11.4 MB)
downloaded 11.4 MB

package ‘DECIPHER’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in C:\Users\Wilson\AppData\Local\Temp\Rtmp8G3olX\downloaded_packages
Installation path not writeable, unable to update packages: boot, foreign, KernSmooth, mgcv,
nlme, survival
Old packages: 'msa', 'Rcpp'
Update all/some/none? [a/s/n]: 
a

There is a binary version available but the source version is later:
binary source needs_compilation
msa 1.15.0 1.16.0              TRUE

Binaries will be installed
Warning: package ‘msa’ is in use and will not be installed
trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/Rcpp_1.0.3.zip'
Content type 'application/zip' length 2996604 bytes (2.9 MB)
downloaded 2.9 MB

package ‘Rcpp’ successfully unpacked and MD5 sums checked
Warning: cannot remove prior installation of package ‘Rcpp’
Warning: restored ‘Rcpp’

The downloaded binary packages are in
C:\Users\Wilson\AppData\Local\Temp\Rtmp8G3olX\downloaded_packages
Warning message:
In file.copy(savedcopy, lib, recursive = TRUE) :
problem copying C:\Users\Wilson\Documents\R\win-library\3.6\00LOCK\Rcpp\libs\x64\Rcpp.dll to C:\Users\Wilson\Documents\R\win-library\3.6\Rcpp\libs\x64\Rcpp.dll:
Permission denied
</code>
</div>
</div>

Line 500:
Should actually be:
<code>(ppa <- DECIPHER::AlignProfiles(Biostrings::AAStringSet(w), Biostrings::AAStringSet(m)))</code>

Can see where the two MSA methods made different decisions.

===9.5.3 Alignment editing===
;Poor alignment features biologically relevant not necessarily screened by MSA methods:
Alignment of functionally different residues or evolved in different contexts, indels at annotated features and biologically relevant positions, other errors

;Manual alignment editing can:
Reduce implausible number of rare evolutionary events, emphasize conservation of known functional motifs


{{Vspace}}
